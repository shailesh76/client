{"ast":null,"code":"import axios from \"axios\";\nconst rootUrl = \"http://localhost:8000/api/v1\";\nconst userUrl = rootUrl + \"/user\";\nconst transUrl = rootUrl + \"/transaction\";\nconst getUserIdFromStorage = () => {\n  const user = sessionStorage.getItem(\"user\");\n  if (user) {\n    const userObj = JSON.parse(user);\n    return userObj === null || userObj === void 0 ? void 0 : userObj._id;\n  }\n  return;\n};\n\n// ====== user section\n//send datat to server to add to db\nexport const postUser = formData => {\n  try {\n    return axios.post(userUrl, formData);\n  } catch (error) {\n    console.log(error);\n    return {\n      status: \"error\",\n      message: error.message\n    };\n  }\n};\n\n// login user\n\nexport const loginUser = formData => {\n  try {\n    return axios.post(userUrl + \"/login\", formData);\n  } catch (error) {\n    console.log(error);\n    return {\n      status: \"error\",\n      message: error.message\n    };\n  }\n};\n\n// ======= transaction section\n//post transaction\nexport const postTrans = async formData => {\n  try {\n    const userId = getUserIdFromStorage();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"you must be logged In\"\n      };\n    }\n    const {\n      data\n    } = await axios.post(transUrl, formData, {\n      headers: {\n        Authorization: userId\n      }\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message\n    };\n  }\n};\n\n//get user specific transactions\nexport const fetchTrans = async () => {\n  try {\n    const userId = getUserIdFromStorage();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"you must be logged In\"\n      };\n    }\n    const {\n      data\n    } = await axios.get(transUrl, {\n      headers: {\n        Authorization: userId\n      }\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message\n    };\n  }\n};\n\n//get user specific transactions\nexport const deleteTrans = async ids => {\n  try {\n    const userId = getUserIdFromStorage();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"you must be logged In\"\n      };\n    }\n    const {\n      data\n    } = await axios.delete(transUrl, {\n      data: ids,\n      headers: {\n        Authorization: userId\n      }\n    });\n    console.log(data, \"lkjhgsdfgb\");\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message\n    };\n  }\n};","map":{"version":3,"names":["axios","rootUrl","userUrl","transUrl","getUserIdFromStorage","user","sessionStorage","getItem","userObj","JSON","parse","_id","postUser","formData","post","error","console","log","status","message","loginUser","postTrans","userId","data","headers","Authorization","fetchTrans","get","deleteTrans","ids","delete"],"sources":["C:/Development/Dented code/expenses tracker/client/src/utils/axiosHelper.js"],"sourcesContent":["import axios from \"axios\";\n\nconst rootUrl = \"http://localhost:8000/api/v1\";\nconst userUrl = rootUrl + \"/user\";\nconst transUrl = rootUrl + \"/transaction\";\n\nconst getUserIdFromStorage = () => {\n  const user = sessionStorage.getItem(\"user\");\n\n  if (user) {\n    const userObj = JSON.parse(user);\n\n    return userObj?._id;\n  }\n  return;\n};\n\n// ====== user section\n//send datat to server to add to db\nexport const postUser = (formData) => {\n  try {\n    return axios.post(userUrl, formData);\n  } catch (error) {\n    console.log(error);\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n\n// login user\n\nexport const loginUser = (formData) => {\n  try {\n    return axios.post(userUrl + \"/login\", formData);\n  } catch (error) {\n    console.log(error);\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n\n// ======= transaction section\n//post transaction\nexport const postTrans = async (formData) => {\n  try {\n    const userId = getUserIdFromStorage();\n\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"you must be logged In\",\n      };\n    }\n\n    const { data } = await axios.post(transUrl, formData, {\n      headers: {\n        Authorization: userId,\n      },\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n\n//get user specific transactions\nexport const fetchTrans = async () => {\n  try {\n    const userId = getUserIdFromStorage();\n\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"you must be logged In\",\n      };\n    }\n\n    const { data } = await axios.get(transUrl, {\n      headers: {\n        Authorization: userId,\n      },\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n\n//get user specific transactions\nexport const deleteTrans = async (ids) => {\n  try {\n    const userId = getUserIdFromStorage();\n\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"you must be logged In\",\n      };\n    }\n\n    const { data } = await axios.delete(transUrl, {\n      data: ids,\n      headers: {\n        Authorization: userId,\n      },\n    });\n    console.log(data, \"lkjhgsdfgb\");\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}